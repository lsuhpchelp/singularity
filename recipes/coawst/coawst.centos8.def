Bootstrap: docker
From: intel/oneapi-hpckit:2021.4-devel-centos8

%labels
Author fchen14@lsu.edu

%environment

export PATH=/opt/cmake-3.26.3-linux-x86_64/bin:$PATH
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
export PATH=/usr/local/bin:/opt/intel/oneapi/compiler/2022.1.0/linux/bin:$PATH

#set environment for netcdf4 for ROMS and WRF

export NETCDF=/opt/packages/netcdf-c-4.9.2
export NETCDF_CONFIG=/usr/local/bin/nc-config
export NETCDF_LIBDIR=/usr/local/lib
export NETCDF_INCDIR=/usr/local/include
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${NETCDF_LIBDIR}
export NETCDF_classic=1

#----use intel mpi to compile and run roms ----

export F90=ifort
export FC=ifort
export MPIFC=mpiifort
export MPIF77=mpiifort
export MPIF90=mpiifort

export ROMS_MPI_HOME=/opt/intel/oneapi
export I_MPI_F77=ifort
export I_MPI_F90=ifort

#----load MCT for ROMS
export MCT_INCDIR=/usr/local/include
export MCT_LIBDIR=/usr/local/lib

export LD_LIBRARY_PATH=/usr/local/lib/:${LD_LIBRARY_PATH}

. /etc/profile.d/modules.sh
export MODULEPATH=/opt/intel/oneapi/modulefiles:$MODULEPATH
module load icc mpi

%post

cd /etc/yum.repos.d/
sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*

dnf -y install wget git libcurl-devel libxml2-devel environment-modules m4 diffutils

dnf install -y libxml2-devel libcurl-devel
dnf install -y rsync cmake
# https://thelinuxcluster.com/2022/05/14/installing-environment-modules-on-rocky-linux-8-5/

# need to source the line or module command wont be available
source /etc/profile.d/modules.sh
/opt/intel/oneapi/modulefiles-setup.sh --output-dir=/opt/intel/oneapi/modulefiles
export MODULEPATH=/opt/intel/oneapi/modulefiles:$MODULEPATH
module load icc mpi

mkdir /opt/packages

#Install cmake

#cd /opt/packages
#wget https://github.com/Kitware/CMake/releases/download/v3.26.3/cmake-3.26.3-linux-x86_64.tar.gz
#tar zxf cmake-3.26.3-linux-x86_64.tar.gz

# install zlib

#cd /opt/packages
#wget https://www.zlib.net/fossils/zlib-1.2.13.tar.gz
#tar -xvf zlib-1.2.13.tar.gz && rm zlib-1.2.13.tar.gz
#cd zlib-1.2.13
#./configure --prefix=/usr/local
#make -j`nproc` && make install

# install HDF5

cd /opt/packages
wget https://github.com/HDFGroup/hdf5/releases/download/hdf5_1.14.4.3/hdf5-1.14.4-3.tar.gz
tar -xf hdf5-1.14.4-3.tar.gz && rm hdf5-1.14.4-3.tar.gz
cd hdf5-1.14.4-3
CC=icc CXX=icpc FC=ifort ./configure --prefix=/usr/local --with-zlib=/usr/local --enable-fortran --with-szib=/usr/local
make -j`nproc` && make install

# install NetCDF

cd /opt/packages
wget https://github.com/Unidata/netcdf-c/archive/refs/tags/v4.9.2.tar.gz
tar -xf v4.9.2.tar.gz && rm v4.9.2.tar.gz
cd netcdf-c-4.9.2
CC=icc CXX=icpc ./configure --disable-dap --prefix=/usr/local
make -j 4 && make install
#
cd /opt/packages
wget https://github.com/Unidata/netcdf-fortran/archive/refs/tags/v4.6.1.tar.gz
tar -xf v4.6.1.tar.gz && rm v4.6.1.tar.gz
cd netcdf-fortran-4.6.1
#CC=icc CXX=icpc FC=ifort ./configure ac_cv_sizeof_off_t=8 --disable-dap --prefix=/usr/local
export LD_LIBRARY_PATH=/usr/local/lib/:$LD_LIBRARY_PATH
CC=icc CXX=icpc FC=ifort ./configure --disable-dap --prefix=/usr/local
make -j 4 && make install

mkdir -p /project /work /usr/lib64
#
# Download and install MCT
#
cd /opt/packages
git clone https://github.com/MCSclimate/MCT.git
cd MCT
mkdir build
./configure CC=icc CXX=icpc FC=ifort MPIFC=mpiifort --prefix=/usr/local
make -j 4
make install

# make a mount point for COAWST
mkdir /opt/COAWST

## Build COAWST
#
##cd /opt
##git clone https://code.usgs.gov/coawstmodel/COAWST.git
##cd /opt/COAWST
#
##echo "NETCDF_INCDIR: ${NETCDF_INCDIR}"
##echo "Print LD_LIBRARY_PATH: "
##echo $LD_LIBRARY_PATH
##echo $PATH
##sh coawst.bash -j 4

%runscript
exec "$@"

